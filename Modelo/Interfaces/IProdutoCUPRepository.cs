using CoBRA.Domain.Entities;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace CoBRA.Domain.Interfaces
{
    public interface IProdutoCUPRepository
    {
        ProdutoPaginadoCUP CarregarProdutosCUP(int NumeroPagina, int RegistrosPagina, bool ebook);
        ProdutoPaginadoCUP CarregarProdutosFiltroCUP(int NumeroPagina, int RegistrosPagina, string Filtro, bool ebook);
        ProdutoCUP CarregarProdutosIdCUP(long IdProduto);
        List<ProdutoCUP> CarregarProdutosRelatorioCabecalhoCUP(string Titulo);
        List<AssuntoCUP> CarregarAssuntoIdProdutoCUP(long IdProduto);
        List<TemaCUP> CarregarTemaIdProdutoCUP(long IdProduto);
        List<DataEspecialCUP> CarregarDatasEspeciaisIdProdutoCUP(long IdProduto);
        MioloCUP CarregarMioloIdProdutoCUP(long IdProduto);
        CapaCUP CarregarCapaIdProdutoCUP(long IdProduto);
        List<CadernoCUP> CarregarCadernoIdProdutoCUP(long IdProduto);
        List<EncarteCUP> CarregarEncarteIdProdutoCUP(long IdProduto);
        MidiaFichaCUP CarregarMidiaIdProdutoCUP(long IdProduto);
        List<ControleImpressaoCUP> CarregarImpressaoIdProdutoCUP(long IdProduto);
        Task<long> SalvarProdutoCUP(ProdutoCUP produto);
        Task AtualizarProdutoCUP(ProdutoCUP produto);
        Task ExcluirProdutoCUP(long IdProduto);
        Task PublicarProdutoCUP(long IdProduto);
        Task SalvarProdutoLinkCUP(long IdProduto, string Url, decimal? Preco);
        Task SalvarAssuntoProdutoCUP(int idAssunto, long idProduto);
        Task ExcluirAssuntoProdutoCUP(long idProduto);
        Task SalvarTemaNorteadorProdutoCUP(int idTema, long idProduto);
        Task ExcluirTemaNorteadorProdutoCUP(long idProduto);
        Task SalvarDataEspecialProdutoCUP(int idTeidDataEspecialma, long idProduto);
        Task<bool> VerificaExisteEscpeCUP(long idProdutop);
        Task ExcluirDataEspecialProdutoCUP(long idProduto);
        Task SalvarMioloProdutoCUP(MioloCUP miolo);
        Task AtualizarMioloProdutoCUP(MioloCUP miolo);
        Task SalvarCapaProdutoCUP(CapaCUP capa);
        Task AtualizarCapaProdutoCUP(CapaCUP capa);
        Task SalvarCadernoProdutoCUP(CadernoCUP caderno);
        Task ExcluirCadernoProdutoCUP(long IdProduto);
        Task SalvarEncarteProdutoCUP(EncarteCUP encarte);
        Task ExcluirEncarteProdutoCUP(long IdProduto);
        Task SalvarMidiaProdutoCUP(long idProduto, string midiaTipo, string midiaOutros);
        Task AtualizarMidiaProdutoCUP(long idProduto, string midiaTipo, string midiaOutros);
        Task SalvarControleImpressaoProdutoCUP(ControleImpressaoCUP controle);
        Task ExcluirControleImpressaoProdutoCUP(long IdProduto);
        Task<int> BuscarDigitoSequencialProduto(Produto produto);
        Task<bool> CodigoEbsaExiste(string codigoEbsa);
        void SalvarPreferenciasRelatorioCUP(string viewmodel, int idUsuario);
        void AtualizarPreferenciasRelatorioCUP(string viewmodel, int idUsuario);
        string CarregarPreferenciasRelatorioCUP(int idUsuario);
        Task SalvarArquivoCUP(ArquivoProdutoCUP arquivo);
        Task SalvarEpubCUP(ArquivoProdutoCUP arquivo);
        Task<int> SalvarArquivoAutoriaCUP(ArquivoProdutoCUP arquivo);
        Task ExcluirArquivoCUP(long IpProduto);
        Task ExcluirEpubCUP(long IdProduto, string nomeArquivo);
        Task ExcluirArquivoAutoriaCUP(long IdDoc);
        string CarregarCaminhoImagemCUP(long IpProduto);
        List<ArquivoProdutoCUP> CarregarCaminhoEpubCUP(long IpProduto);
        List<ArquivoAutoriaCUP> BuscarArquivosAutoria(long IdAutoria);
        List<MercadoCUP> CarregarMercadoCUP();
        List<AutoriaCUP> CarregarAutoriaPorIdProdutoCUP(long IpProduto);
        List<AutoresCUP> CarregarAutoresCUP(string NomeContratual);
        List<AutoresCUP> CarregarAutoresProdIdCUP(long prodId);
        List<FuncoesCUP> CarregarFuncoesCUP();
        List<FuncoesCUP> CarregarFuncaoAutoriaCUP(long IdAutoria);
        Task<long> SalvarAutoriaCUP(AutoriaCUP produto);
        Task ExcluirAutoriaCUP(long IdAutoria);
        Task AtualizarAutoriaCUP(AutoriaCUP produto);
        Task SalvarAutoriaFuncaoCUP(int IdFuncao, long IdAutoria);
        Task ExcluirAutoriaFuncaoCUP(long IdAutoria);
        List<AbaCUP> CarregarPermissoesAbaUsuarioCUP(int idUsuario);
        List<SeloCUP> CarregarSeloCUP();
        List<TipoCUP> CarregarTipoCUP();
        List<TipoEspecCUP> CarregarTipoEspecCUP(string TipoEspec);
        List<SegmentoCUP> CarregarSegmentoCUP();
        List<ComposicaoCUP> CarregarComposicaoCUP();
        List<AnoCUP> CarregarAnoCUP();
        List<AnoCUP> CarregarAnoPorIdSegmentoCUP(int IdSegmento);
        List<FaixaEtariaCUP> CarregarFaixaEtariaCUP();
        List<FaixaEtariaCUP> CarregarFaixaEtariaPorIdAnoCUP(int IdAno);
        List<DisciplinaCUP> CarregarDisciplinaCUP();
        List<ConteudoDisciplinarCUP> CarregarConteudoDisciplinarCUP();
        List<TemaCUP> CarregarTemaTransversalCUP();
        List<TemaCUP> CarregarTemaNorteadorCUP();
        List<DataEspecialCUP> CarregarDataEspecialCUP();
        List<AssuntoCUP> CarregarAssuntoCUP();
        List<GeneroTextualCUP> CarregarGeneroTextualCUP();
        List<VersaoCUP> CarregarVersaoCUP();
        List<ColecaoCUP> CarregarColecaoCUP();
        List<MidiaCUP> CarregarMidiaCUP();
        List<UnidadeMedidaCUP> CarregarUnidadeMedidaCUP();
        List<PlataformaCUP> CarregarPlataformaCUP();
        List<PlataformaCUP> CarregarPlataformaPorIdMidiaCUP(int IdMidia);
        List<StatusCUP> CarregarStatusCUP();
        List<OrigemCUP> CarregarOrigemCUP();
        List<TipoProdutoCUP> CarregarTipoProdutoCUP();
        List<SegmentoProtheusCUP> CarregarSegmentoProtheusCUP();        
    }
}
